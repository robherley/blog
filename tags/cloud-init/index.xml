<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloud-init on rob's blog</title><link>https://blog.reb.gg/tags/cloud-init/</link><description>Recent content in cloud-init on rob's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Rob Herley</copyright><lastBuildDate>Thu, 13 Jan 2022 00:00:00 -0500</lastBuildDate><atom:link href="https://blog.reb.gg/tags/cloud-init/index.xml" rel="self" type="application/rss+xml"/><item><title>Homelab Part V: Proxmox VMs and cloud-init</title><link>https://blog.reb.gg/posts/05-homelab-pt5/</link><pubDate>Thu, 13 Jan 2022 00:00:00 -0500</pubDate><guid>https://blog.reb.gg/posts/05-homelab-pt5/</guid><description>In the previous part of this series, I setup a Proxmox dynamic inventory with Ansible and created a basic LXC template for creating containers that were automation ready.
In this part, I&amp;rsquo;ll setup some cloud-init configs to initalize VMs in a state where they can automatically be managed by Ansible.
Cloud Images While it&amp;rsquo;s possible to prepare custom base images for cloud-init, many Linux distributions already provide ready-to-use images, such as Ubuntu, Fedora, Debian, etc.</description></item></channel></rss>
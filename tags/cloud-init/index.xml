<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud-Init on rob's blog</title><link>https://blog.reb.gg/tags/cloud-init/</link><description>Recent content in Cloud-Init on rob's blog</description><generator>Hugo</generator><language>en-us</language><copyright>Rob Herley</copyright><lastBuildDate>Thu, 13 Jan 2022 00:00:00 -0500</lastBuildDate><atom:link href="https://blog.reb.gg/tags/cloud-init/index.xml" rel="self" type="application/rss+xml"/><item><title>üè° Homelab V: Proxmox VMs and cloud-init</title><link>https://blog.reb.gg/posts/05-homelab-pt5/</link><pubDate>Thu, 13 Jan 2022 00:00:00 -0500</pubDate><guid>https://blog.reb.gg/posts/05-homelab-pt5/</guid><description>&lt;p>In the previous part of this series, I setup a Proxmox dynamic inventory with Ansible and created a basic LXC template for creating containers that were automation ready.&lt;/p>
&lt;p>In this part, I&amp;rsquo;ll setup some &lt;a href="https://cloudinit.readthedocs.io/en/latest/">cloud-init&lt;/a> configs to initalize VMs in a state where they can automatically be managed by Ansible.&lt;/p>
&lt;h2 id="cloud-images">
 &lt;a href="#cloud-images">#&lt;/a>
 Cloud Images
&lt;/h2>
&lt;p>While it&amp;rsquo;s possible to prepare custom base images for cloud-init, many Linux distributions already provide ready-to-use images, such as &lt;a href="https://cloud-images.ubuntu.com">Ubuntu&lt;/a>, &lt;a href="https://alt.fedoraproject.org/cloud/">Fedora&lt;/a>, &lt;a href="https://cloud.debian.org/images/cloud/">Debian&lt;/a>, etc. This allows for a (mostly) unified configuration that can work across distros and even some *BSD variants.&lt;/p></description></item></channel></rss>